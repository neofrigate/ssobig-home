---
description: 
globs: 
alwaysApply: false
---
# Next.js rules
- Use the App Router structure with `page.tsx` files in route directories.
- Client components must be explicitly marked with `'use client'` at the top of the file.
- Use kebab-case for directory names (e.g., `components/auth-form`) and PascalCase for component files.
- Prefer named exports over default exports, i.e. `export function Button() { /* ... */ }` instead of `export default function Button() { /* ... */ }`.
- Minimize `'use client'` directives:
  - Keep most components as React Server Components (RSC)
  - Only use client components when you need interactivity and wrap in `Suspense` with fallback UI
  - Create small client component wrappers around interactive elements
- Avoid unnecessary `useState` and `useEffect` when possible:
  - Use server components for data fetching
  - Use React Server Actions for form handling
  - Use URL search params for shareable state
- Use `nuqs` for URL search param state management


#Project rules
- **`.next/`**: Next.js 빌드 결과물을 저장합니다. 일반적으로 직접 수정할 필요는 없습니다.
- **`public/`**: 이미지, 폰트 등 정적 에셋을 포함합니다. 이 파일들은 루트 경로 (`/`)에서 제공됩니다.
- **`src/`**: 대부분의 애플리케이션 코드가 위치하는 곳입니다.
  - **`src/app/`**: App Router를 사용하는 Next.js 13+의 핵심 애플리케이션 디렉토리입니다. `app` 내부의 각 폴더는 일반적으로 URL 경로에 매핑됩니다.
    - `page.tsx`: 특정 라우트의 페이지를 나타냅니다.
    - `layout.tsx`: 페이지를 감싸는 UI 셸을 정의합니다.
  - **`src/components/`**: 애플리케이션 전체에서 사용되는 재사용 가능한 UI 컴포넌트를 포함합니다.
- **`node_modules/`**: 모든 프로젝트 종속성(npm 패키지)을 포함합니다.
- **`package.json`**: 프로젝트 종속성을 나열하고 스크립트(예: `npm run dev`)를 정의합니다.
- **`tsconfig.json`**: TypeScript 컴파일러의 구성 파일입니다.
- **`.gitignore`**: Git이 무시해야 하는, 의도적으로 추적되지 않는 파일을 지정합니다.
- **`next.config.ts`**: Next.js의 구성 파일입니다.
- **`README.md`**: 현재 이 파일이며, 프로젝트에 대한 정보를 제공합니다.

